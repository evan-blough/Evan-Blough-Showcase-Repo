Script started on Wed Feb 14 21:32:35 2024
0;eblough@bglinux1:~/3080?1034h~/3080$ cd $HOME/3080
0;eblough@bglinux1:~/3080~/3080$ pwd
/home/10/eblough/3080
0;eblough@bglinux1:~/3080~/3080$ cat hw4.cpp
#include <iostream>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
using namespace std;

int main(int argc, char* argv[]) {
// pipe 1 will be the child read, parent write, with pipe2 being the opposite
 int pipe1[2], pipe2[2];
 int argVal, pid;
 int i;

 char  childWritesToPipe[512]="hello", childReadsFromPipe[512];
 char parentWritesToPipe[512]="goodbye", parentReadsFromPipe[512];

argVal = *argv[1]-'0';

pipe (pipe1);
pipe (pipe2);
pid = fork();

if(pid<0)
{ perror("Fork failed, bailing out:");
exit(123);
}
if(pid == 0)
{	for(i = 0; i < argVal; i++){

	read(pipe2[0], childReadsFromPipe, 512);


	cout << "Child:	 " << getpid() << " hello f child" << endl;


	write(pipe1[1], childWritesToPipe, strlen(childWritesToPipe));

}
close(pipe1[1]);
close(pipe2[0]);
exit(1);
}
else{
	for(i = 0; i < argVal; i++){
	cout << "Parent: " << getpid() << " hello f parent" << endl;

	write(pipe2[1],parentWritesToPipe, strlen(parentWritesToPipe));

	read(pipe1[0], parentReadsFromPipe, 512);

}
close(pipe1[0]);
close(pipe2[1]);
exit(1);
}
}
0;eblough@bglinux1:~/3080~/3080$ g++ hw4.cpp
0;eblough@bglinux1:~/3080~/3080$ ./a.out 5
Parent: 92538 hello f parent
Child:	92539 hello f child
Parent: 92538 hello f parent
Child:	92539 hello f child
Parent: 92538 hello f parent
Child:	92539 hello f child
Parent: 92538 hello f parent
Child:	92539 hello f child
Parent: 92538 hello f parent
Child:	92539 hello f child
0;eblough@bglinux1:~/3080~/3080$ exit

Script done on Wed Feb 14 21:33:30 2024
